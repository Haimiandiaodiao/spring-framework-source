description = "Spring Beans"

apply plugin: "groovy"

dependencies {
	compile(project(":spring-core"))
	optional("javax.inject:javax.inject:1")
	optional("org.yaml:snakeyaml:1.23")
	optional("org.codehaus.groovy:groovy-xml:${groovyVersion}")
	optional("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
	optional("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}")
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
    testCompile 'com.alibaba:fastjson:1.2.78'
	testCompile("javax.annotation:javax.annotation-api:1.3.2")
}

// This module does joint compilation for Java and Groovy code with the compileGroovy task.
sourceSets {
	main.groovy.srcDirs += "src/main/java"
	main.java.srcDirs = []
}

compileGroovy {
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
	options.compilerArgs += "-Werror"
}

// This module also builds Kotlin code and the compileKotlin task naturally depends on
// compileJava. We need to redefine dependencies to break task cycles.
def deps = compileGroovy.taskDependencies.immutableValues + compileGroovy.taskDependencies.mutableValues
compileGroovy.dependsOn = deps - "compileJava"
compileKotlin.dependsOn(compileGroovy)
compileKotlin.classpath += files(compileGroovy.destinationDir)
